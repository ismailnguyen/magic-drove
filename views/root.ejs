<p class="text-lg font-medium">Folder: <strong><%= rootFolder %></strong></p>
<table class="table-auto w-full border-collapse border border-gray-200 mt-4">
    <thead>
        <tr class="bg-gray-100">
            <th class="border border-gray-300 px-4 py-2">File Name</th>
            <th class="border border-gray-300 px-4 py-2">Tags</th>
            <th class="border border-gray-300 px-4 py-2">Action</th>
            <th class="border border-gray-300 px-4 py-2">Best Match Folders</th>
        </tr>
    </thead>
    <tbody>
        <% files.forEach(file => { %>
            <tr class="odd:bg-white even:bg-gray-50">
                <td class="border border-gray-300 px-4 py-2">
                    <span><%= file.fileName %></span>
                    <a 
                        href="#" 
                        class="text-blue-500 hover:underline ml-4 copy-file-path" 
                        data-file-path="<%= path.join(rootFolder, file.fileName) %>">
                        Copy File Path to Clipboard
                    </a>
                    <a 
                        href="#" 
                        class="text-blue-500 hover:underline ml-4 edit-filename" 
                        data-file="<%= file.fileName %>">
                        Edit
                    </a>
                </td>
                <td class="border border-gray-300 px-4 py-2">
                    <input 
                        type="text" 
                        class="tags-input w-full border border-gray-300 px-2 py-1 rounded" 
                        placeholder="Add tags separated by commas" 
                        data-file="<%= file.fileName %>"
                    />
                </td>
                <td class="border border-gray-300 px-4 py-2">
                    <button 
                        class="submit-tags bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600" 
                        data-file="<%= file.fileName %>">
                        Submit
                    </button>
                </td>
                <td class="border border-gray-300 px-4 py-2">
                    <ul class="matching-folders space-y-2" data-file="<%= file.fileName %>"></ul>
                </td>
            </tr>
        <% }); %>
    </tbody>
</table>

<script>
    // Copy file path to clipboard
    document.querySelectorAll('.copy-file-path').forEach(link => {
        link.addEventListener('click', (event) => {
            event.preventDefault();
            const filePath = event.target.getAttribute('data-file-path');
            navigator.clipboard.writeText(filePath)
                .then(() => {
                    showToast(`File path "${filePath}" copied to clipboard.`);
                })
                .catch(err => {
                    console.error('Error copying to clipboard:', err);
                    showToast('Failed to copy the file path to clipboard.');
                });
        });
    });

    // Scroll to a specific file row on page load if a hash is present
    if (window.location.hash) {
        const hash = window.location.hash.substring(1);
        const element = document.getElementById(hash);
        if (element) element.scrollIntoView({ behavior: 'smooth' });
    }

    // Handle editing the file name
    document.querySelectorAll('.edit-filename').forEach(link => {
        link.addEventListener('click', (event) => {
            event.preventDefault();
            const fileName = event.target.getAttribute('data-file');
            const newFileName = prompt(`Enter the new name for the file "${fileName}":`, fileName);

            if (newFileName && newFileName.trim() !== '' && newFileName !== fileName) {
                fetch('/rename-file', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ oldFileName: fileName, newFileName: newFileName.trim() }),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Refresh page and scroll to the updated file
                        window.location.hash = `file-${newFileName.replace(/\W/g, '_')}`;
                        window.location.reload();
                    } else {
                        showToast(data.message || 'Failed to rename the file.');
                    }
                })
                .catch(err => {
                    console.error('Error:', err);
                    showToast('An error occurred while renaming the file.');
                });
            }
        });
    });
    
    document.querySelectorAll('.submit-tags').forEach(button => {
        button.addEventListener('click', (event) => {
            const fileName = event.target.getAttribute('data-file');
            const inputField = document.querySelector(`.tags-input[data-file="${fileName}"]`);
            const tags = inputField.value.split(',').map(tag => tag.trim()).filter(tag => tag);

            if (tags.length === 0) {
                showToast('Please enter at least one tag.');
                return;
            }

            fetch(`/match-folders`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ fileName, tags }),
            })
            .then(response => response.json())
            .then(data => {
                const matchingFoldersElement = document.querySelector(`.matching-folders[data-file="${fileName}"]`);
                matchingFoldersElement.innerHTML = ''; // Clear previous matches

                if (data.success && data.folders.length > 0) {
                    data.folders.forEach(folder => {
                        const li = document.createElement('li');

                        // Add folder name
                        const folderNameSpan = document.createElement('span');
                        folderNameSpan.textContent = folder;

                        // Add "Copy Path" link for the folder
                        const copyFolderPathLink = document.createElement('a');
                        copyFolderPathLink.href = '#';
                        copyFolderPathLink.textContent = 'Copy Path to Clipboard';
                        copyFolderPathLink.style.marginLeft = '10px';
                        copyFolderPathLink.addEventListener('click', (e) => {
                            e.preventDefault();
                            navigator.clipboard.writeText(folder)
                                .then(() => {
                                    showToast(`Folder path "${folder}" copied to clipboard.`);
                                })
                                .catch(err => {
                                    console.error('Error copying to clipboard:', err);
                                    showToast('Failed to copy the folder path to clipboard.');
                                });
                        });

                        // Add "Move File" link
                        const moveLink = document.createElement('a');
                        moveLink.href = '#';
                        moveLink.textContent = 'Move File';
                        moveLink.style.marginLeft = '10px';
                        moveLink.addEventListener('click', (e) => {
                            e.preventDefault();
                            fetch(`/move-file`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ fileName, destination: folder }),
                            })
                            .then(moveResponse => moveResponse.json())
                            .then(moveData => {
                                if (moveData.success) {
                                    showToast(`File "${fileName}" moved to "${folder}" successfully.`);
                                    window.location.reload(); // Refresh the page after success
                                } else {
                                    showToast(`Failed to move file "${fileName}" to "${folder}".`);
                                }
                            })
                            .catch(err => {
                                console.error('Error:', err);
                                showToast('An error occurred while moving the file.');
                            });
                        });

                        li.appendChild(copyFolderPathLink);
                        li.appendChild(folderNameSpan);
                        li.appendChild(moveLink);
                        matchingFoldersElement.appendChild(li);
                    });
                } else {
                    const li = document.createElement('li');
                    li.textContent = 'No matching folders found.';
                    matchingFoldersElement.appendChild(li);
                }
            })
            .catch(err => {
                console.error('Error:', err);
                showToast('An error occurred. Please try again.');
            });
        });
    });
</script>